###########
# BUILDER #
###########

# pull official base image
FROM python:3.11.4-slim-buster as builder

# set work directory
WORKDIR /usr/src/app

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install system dependencies
RUN apt-get update \
    && apt-get install -y --no-install-recommends ffmpeg curl netcat  gcc \
    && rm -rf /var/lib/apt/lists/*

# lint
# RUN pip install --upgrade pip
# RUN pip install flake8==6.0.0
COPY . /usr/src/app/
# RUN flake8 --ignore=E501,F401 .

# install python dependencies
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requirements.txt


#########
# FINAL #
#########

# pull official base image
FROM python:3.11.4-slim-buster

# create directory for the app user
RUN mkdir -p /home/app

# create the app user
RUN addgroup --system app && adduser --system --group app

# create the appropriate directories
ENV HOME=/home/app
ENV APP_HOME=/home/app/web
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/staticfiles
RUN mkdir $APP_HOME/mediafiles
WORKDIR $APP_HOME

# install dependencies
# install dependencies
RUN apt-get update && apt-get install -y --no-install-recommends ffmpeg curl netcat && \
    which netcat && which ffmpeg && which curl

COPY --from=builder /usr/src/app/wheels /wheels
COPY --from=builder /usr/src/app/requirements.txt .

# Correct paths for binaries
COPY --from=builder /bin/netcat /bin/netcat
COPY --from=builder /usr/bin/ffmpeg /usr/bin/ffmpeg
COPY --from=builder /usr/bin/curl /usr/bin/curl

# COPY --from=builder /usr/bin/netcat /usr/bin/netcat
# COPY --from=builder /usr/bin/ffmpeg /usr/bin/ffmpeg
# COPY --from=builder /usr/bin/curl /usr/bin/curl
RUN pip install --upgrade pip
RUN pip install --no-cache /wheels/*

# copy entrypoint.prod.sh
COPY ./entrypoint.prod.sh .
RUN sed -i 's/\r$//g'  $APP_HOME/entrypoint.prod.sh
RUN chmod +x  $APP_HOME/entrypoint.prod.sh

# copy project
COPY . $APP_HOME
COPY k8s/scripts $APP_HOME/k8s/scripts
RUN chmod +x $APP_HOME/k8s/scripts/init-web-app.sh

# Create log directory and set permissions
RUN mkdir -p $APP_HOME/logs && chmod -R 777 $APP_HOME/logs

# chown all the files to the app user
RUN chown -R app:app $APP_HOME

# change to the app user
USER app

# run entrypoint.prod.sh
ENTRYPOINT ["/home/app/web/entrypoint.prod.sh"]
 # Dockerfile.prod

# /Users/mshittu/programming-projects/python/django/media-be/Dockerfile.prod