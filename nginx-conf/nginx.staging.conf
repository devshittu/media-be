events {}

http {

    server {
        listen 80;
        server_name app.staging.gong.ng; # This is for frontend

        location / {
            proxy_pass http://frontend-app:3000;   # This directs requests to the frontend container

            # Proxy settings
            proxy_connect_timeout 10s;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade; # WebSocket support
            proxy_set_header Connection "upgrade"; # WebSocket support
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme; # WebSocket support

        }
    }

    server {
        listen 443 ssl;
        server_name app.staging.gong.ng;

        # Path to your SSL certificate and private key for frontend
        ssl_certificate /etc/nginx/certs/staging.gong.ng+1.pem;
        ssl_certificate_key /etc/nginx/certs/staging.gong.ng+1-key.pem;

        # SSL settings as previously configured for the backend.
        # ... [the rest of your SSL settings]

        location / {
            proxy_pass http://frontend-app:3000;


            proxy_http_version 1.1; # WebSocket support
            proxy_set_header Upgrade $http_upgrade; # WebSocket support
            proxy_set_header Connection "upgrade"; # WebSocket support
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;  # WebSocket support
        }
    }

    resolver 127.0.0.11 valid=5s;
    # set $upstream_endpoint web-app:8000;

    upstream django {
        server web-app:8000;  # This refers to the 'web' service from your docker-compose and its exposed port
    }

    server {
        listen 80;
        server_name api.staging.gong.ng staging.gong.ng;

        set $upstream_endpoint web-app:8000;  # Moved inside the server block

        location / {
            proxy_pass http://django;   # This directs requests to the upstream block defined earlier

            # These are the proxy directives:
            proxy_connect_timeout 10s;   # Waits up to 10 seconds to establish a connection to Django
            proxy_http_version 1.1;      # Uses HTTP/1.1 to communicate with Django
            proxy_set_header Host $host; # Sends the original Host header to Django
            proxy_set_header X-Real-IP $remote_addr;   # Passes the original client's IP address
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # Passes forwarded-for IP
        }
    }

    server {
        listen 443 ssl;
        server_name api.staging.gong.ng staging.gong.ng;

        set $upstream_endpoint web-app:8000;  # Moved inside the server block if you want to use it here as well

        # Path to your SSL certificate and private key
        ssl_certificate /etc/nginx/certs/staging.gong.ng+1.pem;
        ssl_certificate_key /etc/nginx/certs/staging.gong.ng+1-key.pem;

        # Strong SSL settings (you might need to adjust these based on your requirements)
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
        ssl_prefer_server_ciphers on;
        ssl_dhparam /etc/nginx/certs/dhparam.pem;  # You might need to generate this file

        # Other SSL settings
        ssl_session_timeout 10m;
        ssl_session_cache shared:SSL:10m;
        ssl_session_tickets off;

        # HSTS (optional, but recommended)
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";

        location / {
            proxy_pass http://django;

            proxy_connect_timeout 10s;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }


}


# nginx-conf/nginx.staging.conf
