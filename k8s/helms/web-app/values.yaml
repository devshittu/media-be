namespace:
  name: staging
  labels:
    environment: staging
    app.kubernetes.io/managed-by: Helm
  annotations:
    meta.helm.sh/release-name: web-app
    meta.helm.sh/release-namespace: staging

configMap:
  name: web-app-configmap
  labels:
    environment: staging
  data:
    APP_NAME: 'Aproko'
    APP_CODE_NAME: 'media-be'
    APP_VERSION: '0.0.2'
    APP_DESCRIPTION: 'This is a brief description of the app.'
    APP_FRONTEND_DOMAIN: 'http://127.0.0.1:3000/'
    APP_BASE_URL: 'https://api.mediaapp.local'
    DJANGO_DEBUG: "True"
    APP_MEDIA_ENVIRONMENT: "development"
    APP_MEDIA_EMAIL_BACKEND: "django.core.mail.backends.smtp.EmailBackend"
    APP_MEDIA_EMAIL_HOST: "smtp.gmail.com"
    APP_MEDIA_EMAIL_USE_TLS: "True"
    APP_MEDIA_EMAIL_PORT: "587"
    APP_MEDIA_EMAIL_HOST_USER: "mshittu.work@gmail.com"
    APP_MEDIA_SENDGRID_API_KEY_NAME: "media-app-access"
    NEO4J_ACCEPT_LICENSE_AGREEMENT: "yes"
    POSTGRES_DB: "mediabedb"
    POSTGRES_USER: "mediabeuser"
    POSTGRES_HOST: "db-postgres-service"
    POSTGRES_PORT: "5432"
    NEO4J_HOST: "db-neo4j-service"
    NEO4J_PORT: "7687"
    CELERY_BROKER_URL: 'redis://redis-service:6379/0'
    CELERY_RESULT_BACKEND: 'redis://redis-service:6379/0'

# resources names

secretName: web-app-secret
configMapName: web-app-configmap
pvcName: web-app-pvc
serviceName: web-app-service

service:
  name: web-app-service
  labels:
    app: web-app
    environment: staging
  type: ClusterIP
  ports:
    - port: 8000
      targetPort: 8000
      protocol: TCP

pvc:
  name: web-app-pvc
  labels:
    app: web-app
    environment: staging
  accessModes:
    - ReadWriteOnce
  storage: 1Gi

shared:
  image:
    repository: europe-west2-docker.pkg.dev/media-app-v0-427519/media-app-repo/web-app-image
    tag: "latest"
    pullPolicy: IfNotPresent
  resources:
    limits:
      cpu: "200m"
      memory: "400Mi"
    requests:
      cpu: "50m"
      memory: "100Mi"
  envFrom:
    - configMapRefName: web-app-configmap
    - secretRefName: web-app-secret
  volumeMounts:
    - name: web-app-pvc
      mountPath: /var/lib/webapp

deployment:
  webApp:
    name: web-app
    replicas: 1
    ports:
      - containerPort: 8000
    labels:
      app: web-app
      environment: staging

  celery:
    name: celery
    replicas: 1
    command:
      - celery
      - -A
      - core
      - worker
      - --loglevel=info
    labels:
      app: celery
      environment: staging
    resources:
      limits:
        memory: "1024Mi"
      requests:
        memory: "512Mi"


ingress:
  name: media-app-ingress
  labels:
    environment: staging
  annotations:
    # nginx.ingress.kubernetes.io/enable-websocket: "true"
    # nginx.ingress.kubernetes.io/hsts: "true"
    # nginx.ingress.kubernetes.io/proxy-body-size: "20m"
    # nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    # nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    # nginx.ingress.kubernetes.io/use-regex: "true"
    # nginx.org/websocket-services: frontend-app-service

    kubernetes.io/ingress.class: "gce"
    kubernetes.io/ingress.global-static-ip-name: "media-be-ip"
    networking.gke.io/managed-certificates: managed-cert
    networking.gke.io/v1beta1.FrontendConfig: "http-to-https"

  hosts:
    - host: api.staging.gong.ng
      paths:
        - path: /
          pathType: Prefix
          service:
            name: web-app-service
            port: 8000
    - host: app.staging.gong.ng
      paths:
        - path: /
          pathType: Prefix
          service:
            name: frontend-app-service
            port: 3000
  # tls:
  #   - hosts:
  #       - api.staging.gong.ng
  #       - app.staging.gong.ng
  #     secretName: gong-ng-staging-tls-secret

# k8s/helms/web-app/values.yaml

