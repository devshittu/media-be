namespace:
  name: staging
  labels:
    environment: staging

configMap:
  name: web-app-configmap
  labels:
    environment: staging
  data:
    APP_NAME: 'Aproko'
    APP_CODE_NAME: 'media-be'
    APP_VERSION: '0.0.2'
    APP_DESCRIPTION: 'This is a brief description of the app.'
    APP_FRONTEND_DOMAIN: 'http://127.0.0.1:3000/'
    APP_BASE_URL: 'https://api.mediaapp.local'
    DJANGO_DEBUG: "True"
    APP_MEDIA_ENVIRONMENT: "development"
    APP_MEDIA_EMAIL_BACKEND: "django.core.mail.backends.smtp.EmailBackend"
    APP_MEDIA_EMAIL_HOST: "smtp.gmail.com"
    APP_MEDIA_EMAIL_USE_TLS: "True"
    APP_MEDIA_EMAIL_PORT: "587"
    APP_MEDIA_EMAIL_HOST_USER: "mshittu.work@gmail.com"
    APP_MEDIA_SENDGRID_API_KEY_NAME: "media-app-access"
    NEO4J_ACCEPT_LICENSE_AGREEMENT: "yes"
    POSTGRES_DB: "mediabedb"
    POSTGRES_USER: "mediabeuser"
    POSTGRES_HOST: "db-postgres-service"
    POSTGRES_PORT: "5432"
    NEO4J_HOST: "db-neo4j-service"
    NEO4J_PORT: "7687"
    CELERY_BROKER_URL: 'redis://redis-service:6379/0'
    CELERY_RESULT_BACKEND: 'redis://redis-service:6379/0'

secret:
  name: web-app-secret
  labels:
    environment: staging
  data:
    # Encoded values
    DJANGO_SECRET_KEY: ZGphbmdvLWluc2VjdXJlLWh2MShlMHJAdjRuNG02Z3FkeiVkbig2MG89ZHN5OCZAMF9sYnM4cC12M3VhYmM0KXhs
    DJANGO_DEBUG: VHJ1ZQ==
    DJANGO_ALLOWED_HOSTS: d2ViLWFwcCx3ZWItYXBwLXNlcnZpY2UsMTI3LjAuMC4xLGxvY2FsaG9zdCwqLm1lZGlhYXBwLmxvY2FsLGFwaS5tZWRpYWFwcC5sb2NhbCxhcHAubWVkaWFhcHAubG9jYWwsKi5nb25nLm5nLGFwaS5nb25nLm5nLGFwcC5nb25nLm5nLGFwaS5zdGFnaW5nLmdvbmcubmcsYXBwLnN0YWdpbmcuZ29uZy5uZyxhcGkuZGV2LmdvbmcubmcsYXBwLmRldi5nb25nLm5n
    TWILIO_ACCOUNT_SID: eW91cl9hY2NvdW50X3NpZF9oZXJl
    TWILIO_AUTH_TOKEN: eW91cl9hdXRoX3Rva2VuX2hlcmU=
    TWILIO_PHONE_NUMBER: eW91cl90d2lsaW9fcGhvbmVfbnVtYmVyX2hlcmU=
    SECRET_KEY: ZjhmemNvMzdqeXRienBsJmt2NmYoXmZuXnIqbzRsdXpsdHR3N2tAemZhdCk3Iy1xXzA=
    
    POSTGRES_DB: bWVkaWFiZWRi
    POSTGRES_USER: bWVkaWFiZXVzZXI=
    POSTGRES_PASSWORD: bWVkaWFiZXBhc3N3b3Jk
    POSTGRES_HOST: ZGItcG9zdGdyZXMtc2VydmljZQ==
    POSTGRES_PORT: NTQzMg==

    NEO4J_USERNAME: bmVvNGo=
    NEO4J_PASSWORD: cGFzc3dvcmQ=
    NEO4J_HOST: ZGItbmVvNGotc2VydmljZQ==
    NEO4J_PORT: NzY4Nw==
    NEO4J_AUTH: bmVvNGovcGFzc3dvcmQ=

    REDIS_PASSWORD: cGFzc3dvcmQ=
    REDIS_HOST: ZGItcmVkaXMtbWFzdGVy
    REDIS_PORT: NjM3OQ==
    CELERY_BROKER_URL: cmVkaXM6Ly9yZWRpcy1zZXJ2aWNlOjYzNzkvMA==
    CELERY_RESULT_BACKEND: cmVkaXM6Ly9yZWRpcy1zZXJ2aWNlOjYzNzkvMA==
    APP_MEDIA_EMAIL_BACKEND: ZGphbmdvLmNvcmUubWFpbC5iYWNrZW5kcy5zbXRwLkVtYWlsQmFja2VuZA==
    APP_MEDIA_EMAIL_HOST: c210cC5nbWFpbC5jb20=
    APP_MEDIA_EMAIL_USE_TLS: VHJ1ZQ==
    APP_MEDIA_EMAIL_PORT: NTg3
    APP_MEDIA_EMAIL_HOST_USER: bXNoaXR0dS53b3JrQGdtYWlsLmNvbQ==
    APP_MEDIA_EMAIL_HOST_PASSWORD: d2tldG5ucG50ZXZncg==
    APP_MEDIA_SENDGRID_API_KEY_NAME: bWVkaWEtYXBwLWFjY2Vzcw==
    APP_MEDIA_SENDGRID_API_KEY_ID: Q3lFenE0VFNrQ3hyUV9nOVE=
    APP_MEDIA_SENDGRID_API_KEY: U0cuQ3lDeHJRX2c5US5BbmxZYWdfekJIS1EyazQ3Q1hzbFFHbUl1TW03MTlBbUpJZDg4dkJ6Ums=


service:
  name: web-app-service
  labels:
    app: web-app
    environment: staging
  type: ClusterIP
  ports:
    - port: 8000
      targetPort: 8000
      protocol: TCP



pvc:
  name: web-app-pvc
  labels:
    app: web-app
    environment: staging
  accessModes:
    - ReadWriteOnce
  storage: 1Gi



shared:
  image:
    repository: europe-west2-docker.pkg.dev/media-app-418813/media-app-repo/web-app-image
    tag: "latest"
    pullPolicy: IfNotPresent
  resources:
    limits:
      cpu: "200m"
      memory: "400Mi"
    requests:
      cpu: "50m"
      memory: "100Mi"
  envFrom:
    - configMapRefName: web-app-configmap
    - secretRefName: web-app-secret
  volumeMounts:
    - name: web-app-pvc
      mountPath: /var/lib/webapp

deployment:
  webApp:
    name: web-app
    replicas: 1
    ports:
      - containerPort: 8000
    labels:
      app: web-app
      environment: staging

  celery:
    name: celery
    replicas: 1
    command:
      - celery
      - -A
      - core
      - worker
      - --loglevel=info
    labels:
      app: celery
      environment: staging
    resources:
      limits:
        memory: "1024Mi"
      requests:
        memory: "512Mi"


ingress:
  name: media-app-ingress
  labels:
    environment: staging
  annotations:
    nginx.ingress.kubernetes.io/enable-websocket: "true"
    nginx.ingress.kubernetes.io/hsts: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "20m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.org/websocket-services: frontend-app-service
  hosts:
    - host: api.staging.gong.ng
      paths:
        - path: /
          pathType: Prefix
          service:
            name: web-app-service
            port: 8000
    - host: app.staging.gong.ng
      paths:
        - path: /
          pathType: Prefix
          service:
            name: frontend-app-service
            port: 3000
  tls:
    - hosts:
        - api.staging.gong.ng
        - app.staging.gong.ng
      secretName: gong-ng-staging-tls-secret



redis:
  enabled: true
  name: redis-service
  image:
    repository: redis
    tag: 6.0.9
  resources:
    requests:
      memory: "100Mi"
      cpu: "100m"
    limits:
      memory: "200Mi"
      cpu: "200m"
  port: 6379

postgresql:
  enabled: true
  name: db-postgres-service
  image:
    repository: postgres
    tag: "13"
  resources:
    requests:
      memory: "500Mi"
      cpu: "500m"
    limits:
      memory: "1000Mi"
      cpu: "1000m"
  port: 5432
  env:
    POSTGRES_DB: mediabedb
    POSTGRES_USER: mediabeuser
    POSTGRES_PASSWORD: "{{ .Values.secret.data.POSTGRES_PASSWORD | b64dec }}"

neo4j:
  enabled: true
  name: db-neo4j-service
  image:
    repository: neo4j
    tag: "4.0"
  resources:
    requests:
      memory: "1000Mi"
      cpu: "1000m"
    limits:
      memory: "2000Mi"
      cpu: "2000m"
  port: 7687
  env:
    NEO4J_AUTH: "neo4j/password"
