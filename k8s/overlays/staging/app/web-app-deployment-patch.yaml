# ./k8s/overlays/staging/web-app-deployment-patch.yaml

apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-app
spec:
  template:
    spec:
      containers:
      - name: web-app
        resources:
          requests:
            cpu: "50m"
            memory: "100Mi"
          limits:
            cpu: "200m"
            memory: "400Mi"
        env:
          - name: DJANGO_ALLOWED_HOSTS
            valueFrom:
              secretKeyRef:
                name: web-app-secret
                key: DJANGO_ALLOWED_HOSTS

          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: web-app-secret
                key: POSTGRES_PASSWORD


          - name: POSTGRES_DB
            value: "mediabedb"
          - name: POSTGRES_USER
            value: "mediabeuser"
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: web-app-secret
                key: POSTGRES_PASSWORD
          # - name: POSTGRES_HOST
          #   value: "db-postgres-postgresql"
          - name: POSTGRES_PORT
            value: "5432"
# TODO: DELETE till end IF POSTGRES SQL DOES NOT WORK  
      #     - name: POSTGRES_HOST
      #       value: 127.0.0.1  # Point to the local Cloud SQL Proxy sidecar

      # - name: cloudsql-proxy
      #   image: gcr.io/cloudsql-docker/gce-proxy:1.16
      #   command:
      #     - "/cloud_sql_proxy"
      #     - "-instances=media-app-418813:europe-west2:mediabedb=tcp:5432"
      #     - "-credential_file=/secrets/cloudsql/credentials.json"
      #   volumeMounts:
      #   - name: cloudsql-instance-credentials
      #     mountPath: /secrets/cloudsql
      #     readOnly: true

      # volumes:
      # - name: cloudsql-instance-credentials
      #   secret:
      #     secretName: cloudsql-instance-credentials

# k8s/overlays/staging/app/web-app-deployment-patch.yaml