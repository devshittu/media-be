version: '3.9'

services:
  web:
    build: .
    # command: gunicorn core.wsgi -b 0.0.0.0:8000  # new
    command: python /code/manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/code
      - media_volume:/code/media  # Add this line
    ports:
      - 8000:8000
    depends_on:
      - db
      - neo4j
    # environment:
    #   - "DJANGO_SECRET_KEY=django-insecure-hv1(e0r@v4n4m6gqdz%dn(60o=dsy8&@0_lbs8p-v3u^bs4)xl"
    #   - "DJANGO_DEBUG=True"
      # - "DJANGO_SECURE_SSL_REDIRECT=False"  # new
      # - "DJANGO_SECURE_HSTS_SECONDS=0"  # new
      # - "DJANGO_SECURE_HSTS_INCLUDE_SUBDOMAINS=False"  # new
      # - "DJANGO_SECURE_HSTS_PRELOAD=False"  # new
      # - "DJANGO_SESSION_COOKIE_SECURE=False"  # new
      # - "DJANGO_CSRF_COOKIE_SECURE=False"  # new
  
  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"

  celery:
    build: .
    command: celery -A core worker --loglevel=info
    volumes:
      - .:/code
    depends_on:
      - db
      - redis

  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - "POSTGRES_HOST_AUTH_METHOD=trust"
      - "POSTGRES_DB=mediabedb"
      - "POSTGRES_USER=mediabeuser"
      - "POSTGRES_PASSWORD=mediabepassword"
  
  neo4j:
    image: neo4j:latest
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
    environment:
      - NEO4J_AUTH=neo4j/password

volumes:
  postgres_data:
  media_volume: 
  neo4j_data:
  neo4j_logs:

# docker-compose.dev.yml